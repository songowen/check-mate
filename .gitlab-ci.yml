image: node:22.12.0

stages:
  - build
  - deploy

variables:
  MATTERMOST_WEBHOOK: $MATTERMOST_WEBHOOK  # GitLab > CI/CD > Variables Ïóê ÏÑ§Ï†ïÌïú webhook URL

before_script:
  - echo "GitLab CI/CD ÏãúÏûë!"
  - node -v
  - npm -v

build_checkmate_fe:
  stage: build
  only:
    - fe
  script:
    - cd checkmate-fe
    - echo "$FRONTEND_ENV" > .env
    - cat .env
    - npm ci
    - npm run build
  artifacts:
    paths:
      - checkmate-fe/dist
  after_script:
    - |
      if [ "$CI_JOB_STATUS" == "success" ]; then
        curl -X POST -H 'Content-Type: application/json' \
        -d "{\"text\": \"‚úÖ [ÎπåÎìú ÏÑ±Í≥µ] $CI_PROJECT_NAME - $CI_COMMIT_BRANCH\"}" $MATTERMOST_WEBHOOK
      else
        curl -X POST -H 'Content-Type: application/json' \
        -d "{\"text\": \"‚ùå [ÎπåÎìú Ïã§Ìå®] $CI_PROJECT_NAME - $CI_COMMIT_BRANCH\"}" $MATTERMOST_WEBHOOK
      fi

deploy_checkmate_fe:
  stage: deploy
  only:
    - fe
  script:
    - echo "üöÄ Docker Î∞∞Ìè¨ ÏãúÏûë"
    - cd checkmate-fe
    - docker stop checkmate-fe-container || true
    - docker rm checkmate-fe-container || true
    - docker rmi checkmate-fe || true
    - docker build -t checkmate-fe .
    - docker run -d --name checkmate-fe-container -p 3000:80 checkmate-fe
  after_script:
    - |
      if [ "$CI_JOB_STATUS" == "success" ]; then
        curl -X POST -H 'Content-Type: application/json' \
        -d "{\"text\": \"‚úÖ [Î∞∞Ìè¨ ÏÑ±Í≥µ] $CI_PROJECT_NAME - $CI_COMMIT_BRANCH\"}" $MATTERMOST_WEBHOOK
      else
        curl -X POST -H 'Content-Type: application/json' \
        -d "{\"text\": \"‚ùå [Î∞∞Ìè¨ Ïã§Ìå®] $CI_PROJECT_NAME - $CI_COMMIT_BRANCH\"}" $MATTERMOST_WEBHOOK
      fi

