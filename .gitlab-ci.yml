image: node:22.12.0

stages:
  - build
  - deploy

variables:
  MATTERMOST_WEBHOOK: $MATTERMOST_WEBHOOK  # GitLab > CI/CD > Variables 에 설정한 webhook URL

before_script:
  - echo "GitLab CI/CD 시작!"
  - node -v
  - npm -v

build_checkmate_fe:
  stage: build
  only:
    - fe
  script:
    - cd checkmate-fe
    - docker build --build-arg FRONTEND_ENV="$FRONTEND_ENV" -t checkmate-fe .
  after_script:
    - |
      if [ "$CI_JOB_STATUS" == "success" ]; then
        curl -X POST -H 'Content-Type: application/json' \
        -d "{\"text\": \"✅ [프론트 빌드 성공] $CI_PROJECT_NAME - $CI_COMMIT_BRANCH\"}" $MATTERMOST_WEBHOOK
      else
        curl -X POST -H 'Content-Type: application/json' \
        -d "{\"text\": \"❌ [프론트 빌드 실패] $CI_PROJECT_NAME - $CI_COMMIT_BRANCH\"}" $MATTERMOST_WEBHOOK
      fi

deploy_checkmate_fe:
  stage: deploy
  only:
    - fe
  script:
    - echo "🚀 Docker 배포 시작"
    - docker stop checkmate-fe-container || true
    - docker rm checkmate-fe-container || true
    - docker rmi checkmate-fe || true
    - docker run -d --name checkmate-fe-container -p 3000:80 checkmate-fe
  after_script:
    - |
      if [ "$CI_JOB_STATUS" == "success" ]; then
        curl -X POST -H 'Content-Type: application/json' \
        -d "{\"text\": \"✅ [프론트 배포 성공] $CI_PROJECT_NAME - $CI_COMMIT_BRANCH\"}" $MATTERMOST_WEBHOOK
      else
        curl -X POST -H 'Content-Type: application/json' \
        -d "{\"text\": \"❌ [프론트 배포 실패] $CI_PROJECT_NAME - $CI_COMMIT_BRANCH\"}" $MATTERMOST_WEBHOOK
      fi

